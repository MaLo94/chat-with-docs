version: '3.8'

services:
  qdrant:
    image: qdrant/qdrant
    container_name: qdrant 
    # environment:
    #   QDRANT__SERVICE__GRPC_PORT: 6334
    ports:
      - 6333:6333 # tcp
      # - 6334:6334 # grpc
    volumes:
      - ./qdrant_data:/qdrant/storage
    restart: always

  mongodb:
    container_name: mongodb
    image: mongo
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: CommunerAdminTask
      MONGO_INITDB_ROOT_PASSWORD: CommunerDBPass88446622
      MONGO_INITDB_DATABASE: root-db
    volumes:
        - ./mongodb:/data/db
    restart: always

  # gateway-api:
  #   container_name: gateway-api
  #   build:
  #     context: .
  #     dockerfile: ./docker/Dockerfile.GatewayAPI
  #   depends_on:
  #     - mongodb
  #     - qdrant
  #   ports:
  #       - "8880:8880" 
  #   links:
  #       - mongodb
  #       - qdrant
  #   restart: always
  
  ollama:
    image: ollama/ollama  # Use the official Ollama image
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - ./ollama_models:/root/.ollama  # Persist models across restarts

    restart: always
      
# ollama run llama3.2:1b

  # streamlit-ui:
  #   container_name: streamlit-ui
  #   build:
  #     context:    .
  #     dockerfile: ./docker/Dockerfile.UIApp
  #   environment:
  #     - OLLAMA_HOST=http://ollama:11434
  #   depends_on:
  #     - ollama
  #     - mongodb
  #     - qdrant
  #   ports:
  #       - "8501:8501"
  #   links:
  #       - ollama
  #       - mongodb
  #       - qdrant
  #   volumes:
  #     - ./streamlit_ui_data:/app
  #   restart: always


  chat-app-openai:
    container_name: chat-app-openai
    build:
      context:    .
      dockerfile: ./docker/Dockerfile.UIApp_OpenAI
    # environment:
    #   - OLLAMA_HOST=http://ollama:11434
    env_file:
      - ./.env
    depends_on:
      # - ollama
      - mongodb
      - qdrant
    ports:
        - "8502:8502"
    links:
        # - ollama
        - mongodb
        - qdrant
    volumes:
      - ./chat_app_openai_data:/app
    restart: always

volumes:
  qdrant_data:
  mongodb:
  ollama_models:
  # streamlit_ui_data:
  chat_app_openai_data:
